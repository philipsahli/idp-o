version: 2
project_name: idp-o
release:
  github:
    owner: philipsahli
    name: idp-o
  prerelease: auto
  name_template: '{{.Tag}}'
  header: |
    ## innominatus {{ .Version }}

    Score-based platform orchestration component

    ### Installation

    **Docker:**
    ```bash
    docker pull ghcr.io/philipsahli/innominatus:{{ .Version }}
    docker run -p 8081:8081 ghcr.io/philipsahli/innominatus:{{ .Version }}
    ```

    **Binary:**
    Download the appropriate archive for your platform below.
  footer: |
    ---
    **Full Changelog**: https://github.com/philipsahli/idp-o/compare/{{ .PreviousTag }}...{{ .Tag }}
  mode: replace
builds:
  - id: innominatus
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - windows_amd64_v1
      - windows_arm64_v8.0
    dir: .
    main: ./cmd/server/main.go
    binary: innominatus
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    env:
      - CGO_ENABLED=0
  - id: innominatus-ctl
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - windows_amd64_v1
      - windows_arm64_v8.0
    dir: .
    main: ./cmd/cli/main.go
    binary: innominatus-ctl
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    env:
      - CGO_ENABLED=0
archives:
  - id: innominatus
    builds_info:
      mode: 493
    name_template: '{{ .ProjectName }}_ {{- .Version }}_ {{- .Os }}_ {{- .Arch }}'
    formats:
      - tar.gz
    files:
      - src: README.md
      - src: LICENSE
      - src: admin-config.yaml
      - src: goldenpaths.yaml
      - src: workflows/**
      - src: docs/**
snapshot:
  version_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - ghcr.io/philipsahli/innominatus:{{ .Version }}-amd64
      - ghcr.io/philipsahli/innominatus:latest-amd64
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
    use: buildx
    retry:
      attempts: 10
      delay: 10s
      max_delay: 5m0s
  - goos: linux
    goarch: arm64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - ghcr.io/philipsahli/innominatus:{{ .Version }}-arm64
      - ghcr.io/philipsahli/innominatus:latest-arm64
    build_flag_templates:
      - --platform=linux/arm64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
    use: buildx
    retry:
      attempts: 10
      delay: 10s
      max_delay: 5m0s
docker_digest:
  name_template: digests.txt
docker_manifests:
  - name_template: ghcr.io/philipsahli/innominatus:{{ .Version }}
    image_templates:
      - ghcr.io/philipsahli/innominatus:{{ .Version }}-amd64
      - ghcr.io/philipsahli/innominatus:{{ .Version }}-arm64
    use: docker
    retry:
      attempts: 10
      delay: 10s
      max_delay: 5m0s
  - name_template: ghcr.io/philipsahli/innominatus:latest
    image_templates:
      - ghcr.io/philipsahli/innominatus:latest-amd64
      - ghcr.io/philipsahli/innominatus:latest-arm64
    use: docker
    retry:
      attempts: 10
      delay: 10s
      max_delay: 5m0s
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - typo
      - README
  sort: asc
  format: '{{ .SHA }} {{ .Message }}'
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  skip: "true"
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
